{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhuoq\\\\facebook_clone\\\\frontend\\\\src\\\\components\\\\post\\\\CreateComment.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport Picker from \"emoji-picker-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateComment(_ref) {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const [picker, setPicker] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [commentImage, setCommentImage] = useState(\"\");\n  const [cursorPosition, setCursorPosition] = useState();\n  const textRef = useRef(null);\n  const imgInput = useRef(null);\n  useEffect(() => {\n    textRef.current.selectionEnd = cursorPosition;\n  }, [cursorPosition]);\n\n  const handleEmoji = (e, _ref2) => {\n    let {\n      emoji\n    } = _ref2;\n    const ref = textRef.current;\n    ref.focus();\n    const start = text.substring(0, ref.selectionStart);\n    const end = text.substring(ref.selectionStart);\n    const newText = start + emoji + end;\n    setText(newText);\n    setCursorPosition(start.length + emoji.length);\n  };\n\n  const handleImage = e => {\n    let file = e.target.files[0];\n\n    if (file.type !== \"image/jpeg\" && file.type !== \"image/png\" && file.type !== \"image/webp\" && file.type !== \"image/gif\") {\n      setError(`${file.name} format is not supported.`);\n      return;\n    } else if (file.size > 1024 * 1024 * 5) {\n      setError(`${file.name} is too large max 5mb allowed.`);\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = event => {\n      setCommentImage(event.target.result);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_comment_wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user === null || user === void 0 ? void 0 : user.picture,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment_input_wrap\",\n        children: [picker && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment_emoji_picker\",\n          children: /*#__PURE__*/_jsxDEV(Picker, {\n            onEmojiClick: handleEmoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          hidden: true,\n          ref: imgInput,\n          accept: \"image/jpeg,image/png,image/gif,image/webp\",\n          onChange: handleImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postError comment_error\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postError_error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"blue_btn\",\n            onClick: () => setError(\"\"),\n            children: \"Try again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: textRef,\n          value: text,\n          placeholder: \"Write a comment...\",\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment_circle_icon hover2\",\n          onClick: () => {\n            setPicker(prev => !prev);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"emoji_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment_circle_icon hover2\",\n          onClick: () => imgInput.current.click(),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"camera_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment_circle_icon hover2\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"gif_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment_circle_icon hover2\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"sticker_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), commentImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment_img_preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: commentImage,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small_white_circle\",\n        onClick: () => setCommentImage(\"\"),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"exit_icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateComment, \"K2meDFKCMfygHqOTcIpcskhrr84=\");\n\n_c = CreateComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateComment\");","map":{"version":3,"sources":["C:/Users/Zhuoq/facebook_clone/frontend/src/components/post/CreateComment.js"],"names":["useEffect","useRef","useState","Picker","CreateComment","user","picker","setPicker","text","setText","error","setError","commentImage","setCommentImage","cursorPosition","setCursorPosition","textRef","imgInput","current","selectionEnd","handleEmoji","e","emoji","ref","focus","start","substring","selectionStart","end","newText","length","handleImage","file","target","files","type","name","size","reader","FileReader","readAsDataURL","onload","event","result","picture","value","prev","click"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AACA,eAAe,SAASC,aAAT,OAAiC;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC9C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,EAApD;AACA,QAAMc,OAAO,GAAGf,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMgB,QAAQ,GAAGhB,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACE,OAAR,CAAgBC,YAAhB,GAA+BL,cAA/B;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;;AAGA,QAAMM,WAAW,GAAG,CAACC,CAAD,YAAkB;AAAA,QAAd;AAAEC,MAAAA;AAAF,KAAc;AACpC,UAAMC,GAAG,GAAGP,OAAO,CAACE,OAApB;AACAK,IAAAA,GAAG,CAACC,KAAJ;AACA,UAAMC,KAAK,GAAGjB,IAAI,CAACkB,SAAL,CAAe,CAAf,EAAkBH,GAAG,CAACI,cAAtB,CAAd;AACA,UAAMC,GAAG,GAAGpB,IAAI,CAACkB,SAAL,CAAeH,GAAG,CAACI,cAAnB,CAAZ;AACA,UAAME,OAAO,GAAGJ,KAAK,GAAGH,KAAR,GAAgBM,GAAhC;AACAnB,IAAAA,OAAO,CAACoB,OAAD,CAAP;AACAd,IAAAA,iBAAiB,CAACU,KAAK,CAACK,MAAN,GAAeR,KAAK,CAACQ,MAAtB,CAAjB;AACD,GARD;;AASA,QAAMC,WAAW,GAAIV,CAAD,IAAO;AACzB,QAAIW,IAAI,GAAGX,CAAC,CAACY,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;;AACA,QACEF,IAAI,CAACG,IAAL,KAAc,YAAd,IACAH,IAAI,CAACG,IAAL,KAAc,WADd,IAEAH,IAAI,CAACG,IAAL,KAAc,YAFd,IAGAH,IAAI,CAACG,IAAL,KAAc,WAJhB,EAKE;AACAxB,MAAAA,QAAQ,CAAE,GAAEqB,IAAI,CAACI,IAAK,2BAAd,CAAR;AACA;AACD,KARD,MAQO,IAAIJ,IAAI,CAACK,IAAL,GAAY,OAAO,IAAP,GAAc,CAA9B,EAAiC;AACtC1B,MAAAA,QAAQ,CAAE,GAAEqB,IAAI,CAACI,IAAK,gCAAd,CAAR;AACA;AACD;;AAED,UAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBR,IAArB;;AACAM,IAAAA,MAAM,CAACG,MAAP,GAAiBC,KAAD,IAAW;AACzB7B,MAAAA,eAAe,CAAC6B,KAAK,CAACT,MAAN,CAAaU,MAAd,CAAf;AACD,KAFD;AAGD,GApBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEtC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEuC,OAAhB;AAAyB,QAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,mBACGtC,MAAM,iBACL;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,YAAY,EAAEc;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAME;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,MAAM,MAFR;AAGE,UAAA,GAAG,EAAEH,QAHP;AAIE,UAAA,MAAM,EAAC,2CAJT;AAKE,UAAA,QAAQ,EAAEc;AALZ;AAAA;AAAA;AAAA;AAAA,gBANF,EAaGrB,KAAK,iBACJ;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,sBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC,UAAlB;AAA6B,YAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAqBE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,GAAG,EAAEK,OAFP;AAGE,UAAA,KAAK,EAAER,IAHT;AAIE,UAAA,WAAW,EAAC,oBAJd;AAKE,UAAA,QAAQ,EAAGa,CAAD,IAAOZ,OAAO,CAACY,CAAC,CAACY,MAAF,CAASY,KAAV;AAL1B;AAAA;AAAA;AAAA;AAAA,gBArBF,eA4BE;AACE,UAAA,SAAS,EAAC,4BADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACbtC,YAAAA,SAAS,CAAEuC,IAAD,IAAU,CAACA,IAAZ,CAAT;AACD,WAJH;AAAA,iCAME;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBA5BF,eAoCE;AACE,UAAA,SAAS,EAAC,4BADZ;AAEE,UAAA,OAAO,EAAE,MAAM7B,QAAQ,CAACC,OAAT,CAAiB6B,KAAjB,EAFjB;AAAA,iCAIE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBApCF,eA0CE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA1CF,eA6CE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAqDGnC,YAAY,iBACX;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEA,YAAV;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,EAAD,CAFhC;AAAA,+BAIE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmED;;GA5GuBT,a;;KAAAA,a","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Picker from \"emoji-picker-react\";\r\nexport default function CreateComment({ user }) {\r\n  const [picker, setPicker] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [commentImage, setCommentImage] = useState(\"\");\r\n  const [cursorPosition, setCursorPosition] = useState();\r\n  const textRef = useRef(null);\r\n  const imgInput = useRef(null);\r\n  useEffect(() => {\r\n    textRef.current.selectionEnd = cursorPosition;\r\n  }, [cursorPosition]);\r\n  const handleEmoji = (e, { emoji }) => {\r\n    const ref = textRef.current;\r\n    ref.focus();\r\n    const start = text.substring(0, ref.selectionStart);\r\n    const end = text.substring(ref.selectionStart);\r\n    const newText = start + emoji + end;\r\n    setText(newText);\r\n    setCursorPosition(start.length + emoji.length);\r\n  };\r\n  const handleImage = (e) => {\r\n    let file = e.target.files[0];\r\n    if (\r\n      file.type !== \"image/jpeg\" &&\r\n      file.type !== \"image/png\" &&\r\n      file.type !== \"image/webp\" &&\r\n      file.type !== \"image/gif\"\r\n    ) {\r\n      setError(`${file.name} format is not supported.`);\r\n      return;\r\n    } else if (file.size > 1024 * 1024 * 5) {\r\n      setError(`${file.name} is too large max 5mb allowed.`);\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = (event) => {\r\n      setCommentImage(event.target.result);\r\n    };\r\n  };\r\n  return (\r\n    <div className=\"create_comment_wrap\">\r\n      <div className=\"create_comment\">\r\n        <img src={user?.picture} alt=\"\" />\r\n        <div className=\"comment_input_wrap\">\r\n          {picker && (\r\n            <div className=\"comment_emoji_picker\">\r\n              <Picker onEmojiClick={handleEmoji} />\r\n            </div>\r\n          )}\r\n          <input\r\n            type=\"file\"\r\n            hidden\r\n            ref={imgInput}\r\n            accept=\"image/jpeg,image/png,image/gif,image/webp\"\r\n            onChange={handleImage}\r\n          />\r\n          {error && (\r\n            <div className=\"postError comment_error\">\r\n              <div className=\"postError_error\">{error}</div>\r\n              <button className=\"blue_btn\" onClick={() => setError(\"\")}>\r\n                Try again\r\n              </button>\r\n            </div>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            ref={textRef}\r\n            value={text}\r\n            placeholder=\"Write a comment...\"\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n          <div\r\n            className=\"comment_circle_icon hover2\"\r\n            onClick={() => {\r\n              setPicker((prev) => !prev);\r\n            }}\r\n          >\r\n            <i className=\"emoji_icon\"></i>\r\n          </div>\r\n          <div\r\n            className=\"comment_circle_icon hover2\"\r\n            onClick={() => imgInput.current.click()}\r\n          >\r\n            <i className=\"camera_icon\"></i>\r\n          </div>\r\n          <div className=\"comment_circle_icon hover2\">\r\n            <i className=\"gif_icon\"></i>\r\n          </div>\r\n          <div className=\"comment_circle_icon hover2\">\r\n            <i className=\"sticker_icon\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {commentImage && (\r\n        <div className=\"comment_img_preview\">\r\n          <img src={commentImage} alt=\"\" />\r\n          <div\r\n            className=\"small_white_circle\"\r\n            onClick={() => setCommentImage(\"\")}\r\n          >\r\n            <i className=\"exit_icon\"></i>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}