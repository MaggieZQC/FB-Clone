{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhuoq\\\\facebook_clone\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Routes, Route } from \"react-router-dom\";\nimport Login from \"./pages/login\";\nimport Profile from \"./pages/profile\";\nimport Home from \"./pages/home\";\nimport LoggedInRoutes from \"./routes/LoggedInRoutes\";\nimport NotLoggedInRoutes from \"./routes/NotLoggedInRoutes\";\nimport { useSelector } from \"react-redux\";\nimport Activate from \"./pages/home/activate\";\nimport Reset from \"./pages/reset\";\nimport CreatePostPopup from \"./components/createPostPopup\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport axios from \"axios\";\nimport { postsReducer } from \"./functions/reducers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [{\n    loading,\n    error,\n    posts\n  }, dispatch] = useReducer(postsReducer, {\n    loading: false,\n    posts: [],\n    error: \"\"\n  });\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n\n  const getAllPosts = async () => {\n    try {\n      dispatch({\n        type: \"POSTS_REQUEST\"\n      });\n      const {\n        data\n      } = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/getAllposts`, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      dispatch({\n        type: \"POSTS_SUCCESS\",\n        payload: data\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n\n      dispatch({\n        type: \"POSTS_ERROR\",\n        payload: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [visible && /*#__PURE__*/_jsxDEV(CreatePostPopup, {\n      user: user,\n      setVisible: setVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(LoggedInRoutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {\n            setVisible: setVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, this),\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile/:username\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {\n            setVisible: setVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 22\n          }, this),\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            setVisible: setVisible,\n            posts: posts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 22\n          }, this),\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/activate/:token\",\n          element: /*#__PURE__*/_jsxDEV(Activate, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 51\n          }, this),\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(NotLoggedInRoutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 41\n          }, this),\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/reset\",\n        element: /*#__PURE__*/_jsxDEV(Reset, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hm5sV/xcdwJiv8VQkJNZqqf0TIQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Zhuoq/facebook_clone/frontend/src/App.js"],"names":["Routes","Route","Login","Profile","Home","LoggedInRoutes","NotLoggedInRoutes","useSelector","Activate","Reset","CreatePostPopup","useEffect","useReducer","useState","axios","postsReducer","App","visible","setVisible","user","state","loading","error","posts","dispatch","getAllPosts","type","data","get","process","env","REACT_APP_BACKEND_URL","headers","Authorization","token","payload","response","message"],"mappings":"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","sourcesContent":["import { Routes, Route } from \"react-router-dom\";\nimport Login from \"./pages/login\";\nimport Profile from \"./pages/profile\";\nimport Home from \"./pages/home\";\nimport LoggedInRoutes from \"./routes/LoggedInRoutes\";\nimport NotLoggedInRoutes from \"./routes/NotLoggedInRoutes\";\nimport { useSelector } from \"react-redux\";\nimport Activate from \"./pages/home/activate\";\nimport Reset from \"./pages/reset\";\nimport CreatePostPopup from \"./components/createPostPopup\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport axios from \"axios\";\nimport { postsReducer } from \"./functions/reducers\";\n\nfunction App() {\n  const [visible, setVisible] = useState(false);\n  const { user } = useSelector((state) => ({ ...state }));\n  const [{ loading, error, posts }, dispatch] = useReducer(postsReducer, {\n    loading: false,\n    posts: [],\n    error: \"\",\n  });\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n  const getAllPosts = async () => {\n    try {\n      dispatch({\n        type: \"POSTS_REQUEST\",\n      });\n      const { data } = await axios.get(\n        `${process.env.REACT_APP_BACKEND_URL}/getAllposts`,\n        {\n          headers: {\n            Authorization: `Bearer ${user.token}`,\n          },\n        }\n      );\n      dispatch({\n        type: \"POSTS_SUCCESS\",\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"POSTS_ERROR\",\n        payload: error.response?.data?.message,\n      });\n    }\n  };\n  return (\n    <div>\n      {visible && <CreatePostPopup user={user} setVisible={setVisible} />}\n      <Routes>\n        <Route element={<LoggedInRoutes />}>\n          <Route\n            path=\"/profile\"\n            element={<Profile setVisible={setVisible} />}\n            exact\n          />\n          <Route\n            path=\"/profile/:username\"\n            element={<Profile setVisible={setVisible} />}\n            exact\n          />\n          <Route\n            path=\"/\"\n            element={<Home setVisible={setVisible} posts={posts} />}\n            exact\n          />\n          <Route path=\"/activate/:token\" element={<Activate />} exact />\n        </Route>\n        <Route element={<NotLoggedInRoutes />}>\n          <Route path=\"/login\" element={<Login />} exact />\n        </Route>\n        <Route path=\"/reset\" element={<Reset />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}